apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.2"
    defaultConfig {
        applicationId "com.devtimchentw.variantdemo"
        minSdkVersion 15
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    // 越前面的 dimension 權力越大, 會覆蓋掉後面的 dimension
    // 此例的 Channel 如果跟 Company 有相同的設定會蓋掉 Company 的值
    flavorDimensions "Channel", "Company"
    productFlavors{
        momo{ // 上架在 momo
            applicationIdSuffix ".momo"
            dimension "Company"
            buildConfigField "String", "FROM_WHO", "\"momo\""
        }
        pchome{ // 上架在 pchome
            applicationIdSuffix ".pchome"
            dimension "Company"
            buildConfigField "String", "FROM_WHO", "\"pchome\""
        }
        warehouse{ // 從總倉出貨
            applicationIdSuffix ".warehouse"
            dimension "Channel"
            // 從總倉出貨不需要額外設定寄件人, 直接套用電商平台的寄件人
        }
        store { // 商家自行出貨
            applicationIdSuffix ".store"
            dimension "Channel"
            // 商家自行出貨, 就要改寫寄件人名稱, 覆蓋過公司原本的設定
            buildConfigField "String", "FROM_WHO", "\"科科3C賣場\""
        }
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation"org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'androidx.appcompat:appcompat:1.0.2'
    implementation 'androidx.core:core-ktx:1.0.2'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.1'
}
